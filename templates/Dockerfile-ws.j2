FROM php:7.4-fpm

# To use the default php.ini meant for production
#RUN mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"
COPY docker-compose/php/php.ini $PHP_INI_DIR/

# Arguments defined in docker-compose.yml
ARG user
ARG uid

# Install system dependencies
RUN apt-get update \
    && apt-get install -y \
    libzip-dev \
    git \
    libpng-dev \
    libfreetype6-dev \
    libjpeg62-turbo-dev \
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


# Install nodejs
RUN curl -fsSL https://deb.nodesource.com/setup_14.x | bash - \
    && apt-get install -y nodejs \
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Install pnpm
#RUN curl -f https://get.pnpm.io/v6.16.js | node - add --global pnpm

# Install and configure PHP extensions
RUN docker-php-ext-configure opcache --enable-opcache \
    && docker-php-ext-configure gd \
    && docker-php-ext-install -j$(nproc) pdo_mysql gd zip opcache
COPY docker-compose/php/opcache.ini docker-compose/php/security.ini $PHP_INI_DIR/conf.d/

RUN pecl install -o -f redis \
    &&  rm -rf /tmp/pear \
    &&  docker-php-ext-enable redis

# Get latest Composer
COPY --from=composer:2.0 /usr/bin/composer /usr/bin/composer

# Create system user to run Composer and Artisan Commands
RUN useradd -G www-data,root -u $uid -d /home/$user $user
RUN mkdir -p /home/$user/.composer && \
    chown -R $user:$user /home/$user

# Set working directory and user
WORKDIR {{ aquarium_racine }}

USER $user

EXPOSE 6001

CMD ["php", "artisan", "websockets:serve"]
