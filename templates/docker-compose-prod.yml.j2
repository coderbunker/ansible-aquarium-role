version: "3"

services:
  app:
    build:
      args:
        user: {{ utilisateur_unix }}
        uid: {{ utilisateur_unix_cree.uid }}
      context: ./
      dockerfile: Dockerfile
    image: aquarium:latest-local
    container_name: aquarium-app
    restart: unless-stopped
    working_dir: {{ aquarium_racine }}
    volumes:
      - ./:{{ aquarium_racine }}
      - ./docker-compose/php/php.ini:/usr/local/etc/php/php.ini
    extra_hosts:
      - '{{ jitsi_domaine }}:{{ ansible_default_ipv4.address }}'
    networks:
        meet.jitsi:

  db:
    image: mysql:5.7
    container_name: aquarium-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker-compose/mysql:/docker-entrypoint-initdb.d
      - ./docker-compose/mysql-data:/var/lib/mysql
      - ./docker-compose/mysql-conf.d:/etc/mysql/conf.d
    networks:
        meet.jitsi:

  db-adm:
    depends_on:
      - db
    build:
      context: ./
      dockerfile: docker-compose/phpmyadmin/Dockerfile
    container_name: aquarium-db-adm
    restart: always
    ports:
      - '8001:443'
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: ${DB_PASSWORD}
      PMA_ABSOLUTE_URI: https://{{ aquarium_domaine }}:8441
    volumes:
      - ./docker-compose/phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
    networks:
      - meet.jitsi

  nginx:
    build:
      context: ./
      dockerfile: docker-compose/nginx/Dockerfile
    container_name: aquarium-nginx
    restart: unless-stopped
    ports:
      - 8000:443
    volumes:
      - ./:/var/www/aquarium
      - ./docker-compose/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
        meet.jitsi:

  redis:
    image: redis:6.2
    container_name: aquarium-redis
    restart: unless-stopped
    volumes:
      - ./docker-compose/redis-data:/data
    networks:
        meet.jitsi:

    websockets:
    image: aquarium:latest-local
    command: ['php', 'artisan', 'websockets:serve']
    container_name: websockets
    restart: unless-stopped
    working_dir: /var/www/aquarium
    volumes:
      - ./:/var/www/aquarium
    ports:
      - '4005:4005'
    depends_on:
      - redis
    networks:
      - meet.jitsi

networks:
    meet.jitsi:
